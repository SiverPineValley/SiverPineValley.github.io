{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Devlog"}},"allMarkdownRemark":{"nodes":[{"excerpt":"Kafka에서 토픽을 생성하는 방법에는 두 가지 방법이 있다. 첫 번째로 kafka-topics.sh 와 같은 CLI…","fields":{"slug":"/kafka/kafka_4_2/"},"frontmatter":{"date":"December 23, 2024","title":"4-2) 토픽을 생성하는 두 가지 방법","description":null}},{"excerpt":"Kafka CLI…","fields":{"slug":"/kafka/kafka_4_1/"},"frontmatter":{"date":"December 23, 2024","title":"4-1) 카프카 CLI 툴 소개","description":null}},{"excerpt":"3-3-1) 장점 인프라 관리의 효율화: Kafka 클러스터는 최소 3대 이상의 서버로 운영되는데, 클러스터 담당자의 입장에서는 이러한 모든 서버를 운영하고 관리해야 하는데, Saas는 이러한 운영 burden…","fields":{"slug":"/kafka/kafka_3_3/"},"frontmatter":{"date":"December 07, 2024","title":"3-3) Saas형 Apache Kafka 장점과 단점","description":null}},{"excerpt":"","fields":{"slug":"/kafka/kafka_3_2/"},"frontmatter":{"date":"December 07, 2024","title":"3-2) Saas형 Apache Kafka 소개","description":null}},{"excerpt":"기업용 Kafka는 Confluent Platform으로, 여러 부분에서 튜닝된 기능들이 제공된다. 더 나은 커넥터 기능들을 제공한다. 또한, 모니터링 툴(felice)도 제공된다.","fields":{"slug":"/kafka/kafka_3_1/"},"frontmatter":{"date":"December 07, 2024","title":"3-1) Kafka 클러스터를 운영하는 여러 가지 방법","description":null}},{"excerpt":"카프카 클라이언트는 통신하고자 하는 를 알기 위해 데이터를 주고 (프로듀서) 받기 (컨슈머) 전에 메타데이터를 브로커로부터 전달받는다. 메타데이터는 다음과 같은 옵션을 통해 리프레쉬된다. : 메타데이터를 강제로 리프레쉬하는 간격. 기본값은…","fields":{"slug":"/kafka/kafka_2_9/"},"frontmatter":{"date":"December 07, 2024","title":"2-9) 클라이언트 메타데이터와 브로커 통신","description":null}},{"excerpt":"토픽 이름은 대/소문자, 숫자 0-9, 마침표(.), 언더바( _ ), 하이픈(-) 조합으로 생성할 수 있다. 이외의 문자열이 포함된 토픽 이름은 생성 불가하다. 토픽 이름 길이는 249자 미만이다. 내부 관리용 토픽 (comsumer_offsets…","fields":{"slug":"/kafka/kafka_2_8/"},"frontmatter":{"date":"December 07, 2024","title":"2-8) 토픽 이름 제약 조건과 유지보수 하기 좋은 토픽 이름 정하기","description":null}},{"excerpt":": 카프카에서 데이터를 구분하기 위해 사용되는 단위. 토픽은 1개 이상의 파티션을 소유한다. 파티션에는 프로듀서가 보낸 데이터가 저장되는데, 이를 라고 한다. : 자료구조에서 접하는 와 비슷한 구조로, 컨슈머는 FIFO…","fields":{"slug":"/kafka/kafka_2_6/"},"frontmatter":{"date":"December 07, 2024","title":"2-6) 토픽과 파티션","description":null}},{"excerpt":"레코드는 타임스탬프, 헤더, 오프셋, 메시지 키, 메시지 값으로 구성되어 있다. Producer가 생성한 레코드가 브로커로 전송되면, 타임스탬프와 오프셋이 지정된다. 브로커에 한 번 적재된 데이터는 수정 불가하고, retention…","fields":{"slug":"/kafka/kafka_2_7/"},"frontmatter":{"date":"December 07, 2024","title":"2-7) 레코드","description":null}},{"excerpt":"은 브로커의 또 다른 역할 중 하나이다. 는 리더 파티션과 팔로워 파티션이 모두 싱크된다는 의미이다. 즉, 리더 파티션의 모든 데이터가 팔로워 파티션에 모두 복제된 상태를 의미한다. 만약, ISR…","fields":{"slug":"/kafka/kafka_2_5/"},"frontmatter":{"date":"December 07, 2024","title":"2-5) ISR (In-Sync-Replicas)","description":null}},{"excerpt":"은 브로커의 또 다른 역할 중 하나이다. 데이터 복제는 카프카를 장애 허용 시스템 (fault tolerant system…","fields":{"slug":"/kafka/kafka_2_4/"},"frontmatter":{"date":"December 07, 2024","title":"2-4) 복제 (replication)","description":null}},{"excerpt":"데이터의 저장은 브로커의 역할 중 하나이다. 카프카를 실행할 때 config/server.properties의  옵션에 지정한 경로에 데이터를 저장한다. (토픽 이름 + Partition…","fields":{"slug":"/kafka/kafka_2_3/"},"frontmatter":{"date":"December 07, 2024","title":"2-3) 로그와 세그먼트","description":null}},{"excerpt":"2-2-1) Kafka…","fields":{"slug":"/kafka/kafka_2_2/"},"frontmatter":{"date":"December 07, 2024","title":"2-2) Kafka 클러스터와 브로커, 주키퍼","description":null}},{"excerpt":"Kafka 클러스터는 여러 개의 브로커로 이루어져 있으며 토픽 단위로 데이터가 저장된다. 데이터의 최초 제공자는 Producer라고 하며, Consumer가 토픽을 구독하였다가 이를 받아가는 형태이다. Kafka의 모든 기능들은 Java…","fields":{"slug":"/kafka/kafka_2_1/"},"frontmatter":{"date":"December 07, 2024","title":"2-1) 오픈 소스 Apache Kafka 생태계","description":null}},{"excerpt":"1-1) Apache Kafka의 특징 특징 상세 설명 높은 데이터 처리량 Kafka는 Producer가 브로커로 데이터를 보낼 때, Consumer…","fields":{"slug":"/kafka/kafka_1/"},"frontmatter":{"date":"December 07, 2024","title":"1) Apache Kafka의 특징과 미래","description":null}},{"excerpt":"CKA, CKAD 합격 후기 지난 2022년 7월부터 시작한 kubernetes 공부가 2024년 6~1…","fields":{"slug":"/kubernetes/kubernetes_certificate/"},"frontmatter":{"date":"November 16, 2024","title":"CKA, CKAD 합격 후기","description":null}},{"excerpt":"7.7 영구 볼륨(PV) 대규모 시스템이 모여 있는 클러스터 내에서 Pod가 생성될 때마다, Storage를 설정해줘야 한다. 모든 Pod에 일일히 설정하기는 너무 번거롭다. 쿠버네티스에는 중앙화된 거대한 pool…","fields":{"slug":"/kubernetes/kubernetes_7_3/"},"frontmatter":{"date":"February 05, 2024","title":"[쿠버네티스 완벽 가이드] 17. 컨피그 & 스토리지 API 카테고리 (3) - 영구 볼륨(PV), 영구 볼륨 클레임(PVC), Storage Class","description":null}},{"excerpt":"7.…","fields":{"slug":"/kubernetes/kubernetes_7_2/"},"frontmatter":{"date":"February 05, 2024","title":"[쿠버네티스 완벽 가이드] 16. 컨피그 & 스토리지 API 카테고리 (2) - 볼륨 (Volume)","description":null}},{"excerpt":"1. Flutter Firebase 연동 Flutter Provider 강의를 듣다가 Flutter 프로젝트 내에서 Firebase 연동하는 방법을 배우고 있었는데, Firebase 화면에서 Flutter 연동 아이콘이 있음을 확인하고 Flutter…","fields":{"slug":"/flutter/flutter_firebase/"},"frontmatter":{"date":"January 27, 2024","title":"[Flutter] Fluter-Firebase 연동 방법","description":null}},{"excerpt":"1. ChangeNotifier를 이용한 action의 처리 이번에는 ChangeNotifier를 이용한 action의 처리 방법에 대해 알아보겠다. action의 종류에는 앞서 설명했던  뿐만 아니라, (팝업 표시),  등이 있다. action…","fields":{"slug":"/flutter/flutter_7/"},"frontmatter":{"date":"January 21, 2024","title":"[Flutter] 07. ChangeNotifier를 이용한 action 처리","description":null}},{"excerpt":"1. 개요 flutter를 사용하다 보면 자주 마주하게 되는 에러들이 있다. 이러한 에러들에 대한 정리와, 이를 어떻게 처리하면 좋을지에 대해 정리해보았다. 2. 에러들의 종류 2.1. ProviderNotFound Error…","fields":{"slug":"/flutter/flutter_6/"},"frontmatter":{"date":"January 21, 2024","title":"[Flutter] 06. Provider에서 자주 마주치게 되는 에러들","description":null}},{"excerpt":"1. Proxy Provider Provider란 위젯에 Non-위젯 오브젝트를 제공하는 위젯이라고 할 수 있다. 만약, 한 Provider에서 다른 Provider…","fields":{"slug":"/flutter/flutter_5/"},"frontmatter":{"date":"January 14, 2024","title":"[Flutter] 05. Proxy Provider","description":null}},{"excerpt":"1. Provider Access Provider의 화면 전환은 Navigator 위젯을 통해 이루어진다. 몇 가지 용어 설명을 덪붙이자면, Route: Flutter에서 page, screen은 Route Object로 대표되며, Route…","fields":{"slug":"/flutter/flutter_4/"},"frontmatter":{"date":"January 14, 2024","title":"[Flutter] 04. Provider Access","description":null}},{"excerpt":"6-4-1) 카프카 버로우 버로우는 링크드인에서 개발하여 오픈소스로 공개한 컨슈머 랙 체크 툴로서 RestAPI…","fields":{"slug":"/kafka/kafka_6_4/"},"frontmatter":{"date":"January 11, 2024","title":"6-4) 버로우","description":null}},{"excerpt":"6-3-1) 컨슈머 랙 컨슈머 랙(Lag…","fields":{"slug":"/kafka/kafka_6_3/"},"frontmatter":{"date":"January 11, 2024","title":"6-3) 컨슈머 랙","description":null}},{"excerpt":"6-2-1) java…","fields":{"slug":"/kafka/kafka_6_2/"},"frontmatter":{"date":"January 11, 2024","title":"6-2) 컨슈머 애플리케이션 개발","description":null}},{"excerpt":"6-1-1) 카프카 컨슈머 소개 카프카 프로듀서가 전송한 데이터는 카프카 브로커에 적재된다. 컨슈머에 적재된 데이터를 사용하기 위해 브로커로부터 데이터를 가져와서 필요한 처리를 한다. 6-1-2) 컨슈머 내부 구조 (Java 라이브러리) Fetcher…","fields":{"slug":"/kafka/kafka_6_1/"},"frontmatter":{"date":"January 11, 2024","title":"6-1) 컨슈머","description":null}},{"excerpt":"5-2-1) java를 이용한 프로듀서 애플리케이션 개발  을 통해 프로듀서의 필수 설정(bootstrap_servers)을 설정한다.  객체 생성 후  함수를 통해 record…","fields":{"slug":"/kafka/kafka_5_2/"},"frontmatter":{"date":"January 11, 2024","title":"5-2) 프로듀서 애플리케이션 개발","description":null}},{"excerpt":"1. Consumer flutter의 공식 홈페이지를 살펴보면 Consumer의 정의는 다음과 같다.  즉, Consumer를 상위 위젯으로 지정해놓으면 하위 위젯에서는 Provier.of나 extension 메소드 없이 바로 Provider…","fields":{"slug":"/flutter/flutter_3/"},"frontmatter":{"date":"January 08, 2024","title":"[Flutter] 03. Consumer, ProviderNotFoundException, Selector","description":null}},{"excerpt":"1. FE 상태 관리의 필요성 FE 개발을 하다 보면 위와 같이 트리 구조의 위젯의 여러 부분에서 같은 값을 사용해야할 필요가 있다. 예를 들어 WidgetA의 카운터 값을 WidgetB…","fields":{"slug":"/flutter/flutter_2/"},"frontmatter":{"date":"January 07, 2024","title":"[Flutter] 02. 상태 관리 기법과 Provider","description":null}},{"excerpt":"5-1-…","fields":{"slug":"/kafka/kafka_5_1/"},"frontmatter":{"date":"January 06, 2024","title":"5-1) 프로듀서","description":null}},{"excerpt":"1. Flutter란? Flutter는 구글에서 개발한 dart 기반의 FE 개발 GUI SDK로, 하나의 코드 베이스로 플랫폼에 무관하게 모두 동작되는 앱을 위해 개발되었다. 즉 Android, Kotlin, Swift, Object-C…","fields":{"slug":"/flutter/flutter_1/"},"frontmatter":{"date":"January 06, 2024","title":"[Flutter] 01. 왜 Flutter인가?","description":null}},{"excerpt":"얼마 전 wsl2 커널을 잘못 건드렸다가 설치된 리눅스가 먹통이 되면서 재설치를 한 적이 있다. 재설치가 끝난 후 Virtual Box로 구성해놓은 k8s…","fields":{"slug":"/kubernetes/k8s_local_lab/"},"frontmatter":{"date":"August 21, 2023","title":"[k8s] Vagrant + VirtualBox + Kubeadm으로 Local Lab 환경 구축","description":null}},{"excerpt":"RaspberryPi Pico는 라이베리파이 재단에서 소형 MCU 보드로, 기존 라즈베리파이가 MPU를 사용하여 OS를 올리는 방식과 달리 마이크로컨트롤러를 이용하였다. 또한, 자체 설계한 RP204…","fields":{"slug":"/embedded/micropython_raspberrypi/"},"frontmatter":{"date":"August 14, 2023","title":"[MicroPython] RaspberryPi Pico에서 MicroPython 사용하기","description":null}},{"excerpt":"최근 Raspberry Pi Pico W와 MicroPython을 사용한 작은 프로젝트를 하나 하고 있다. Thonny라는 IDE를 사용해서 Raspberry Pi Pico…","fields":{"slug":"/embedded/micropython_mip/"},"frontmatter":{"date":"August 14, 2023","title":"[MicroPython] mip를 통한 MicroPython 라이브러리 받기","description":null}},{"excerpt":"1. JSONPath k8s에서는 각종 오브젝트의 세팅 정보를 YAML과 JSON 형태로 보여주는 경우가 많다. 대부분의 매니페스트 파일들이 YAML 형식이지만, YAML은 JSON으로도 쉽게 변경 가능하다. k8s…","fields":{"slug":"/kubernetes/k8s_jsonpath/"},"frontmatter":{"date":"August 11, 2023","title":"[k8s] Jsonpath","description":null}},{"excerpt":"트랜잭션? ACID 원칙? Database에는 ACID…","fields":{"slug":"/db/acid/"},"frontmatter":{"date":"October 17, 2022","title":"[Database] ACID 원칙","description":null}},{"excerpt":"7.1 컨피그 & 스토리지 API 카테고리 컨피그 & 스토리지 API 카테고리는 컨테이너에 대한 설정 파일, 패스워드 같은 기밀 정보를 추가하거나 영구 볼륨을 제공하기 위한 리소스이다. 시크릿 컨피그맵 영구 볼륨 클레임 7.…","fields":{"slug":"/kubernetes/kubernetes_7_1/"},"frontmatter":{"date":"October 16, 2022","title":"[쿠버네티스 완벽 가이드] 15. 컨피그 & 스토리지 API 카테고리 (1) - 환경변수, 시크릿, 컨피그맵","description":null}},{"excerpt":"6.8 헤드리스 서비스(None) 헤드리스(Headless) 서비스는 대상이 되는 개별 파드의 IP주소가 직접 반환되는 서비스이다. 지금까지 소개한 다른 서비스에서 부하 분산을 위해 제고오디는 엔드포인트는 가상 IP…","fields":{"slug":"/kubernetes/kubernetes_6_3/"},"frontmatter":{"date":"September 18, 2022","title":"[쿠버네티스 완벽 가이드] 14. 서비스 API 카테고리 (3) - 헤드리스, ExternalName, None-Selector, 인그레스","description":null}},{"excerpt":"6.5 NodePort NodePort 서비스는 ExternalIP와 비슷하다. 앞서 설명한 ExternalIP는 지정한 쿠버네티스 노드의 IP 주소:포트에서 수신한 트래픽을 컨테이너로 전송하는 형태로 외부와 통신할 수 있었다. 반면 NodePort…","fields":{"slug":"/kubernetes/kubernetes_6_2/"},"frontmatter":{"date":"September 12, 2022","title":"[쿠버네티스 완벽 가이드] 13. 서비스 API 카테고리 (2) - NodePort, LoadBalancer, 그 외 서비스","description":null}},{"excerpt":"6.1 서비스 API 카테고리 서비스 API 카테고리는 클러스터상 컨테이너에 대한 엔드포인트를 제공하거나 레이블과 일치하는 컨테이너의 디스커버리에 사용되는 리소스이다. 내부적으로 사용되는 리소스를 제외하고 사용자가 직접 사용하는 것은 L…","fields":{"slug":"/kubernetes/kubernetes_6_1/"},"frontmatter":{"date":"September 09, 2022","title":"[쿠버네티스 완벽 가이드] 12. 서비스 API 카테고리 (1) - 서비스 API 카테고리 개요 및 쿠버네티스 클러스터 네트워크와 서비스","description":null}},{"excerpt":"…","fields":{"slug":"/server/loadbalancer/"},"frontmatter":{"date":"September 09, 2022","title":"[Server] 로드밸런서의 개념과 종류","description":null}},{"excerpt":"5.7 잡 잡(Job)은 컨테이너를 사용하여 한 번만 실행되는 리소스다. 더 정확히는, N…","fields":{"slug":"/kubernetes/kubernetes_5_5/"},"frontmatter":{"date":"September 04, 2022","title":"[쿠버네티스 완벽 가이드] 11. 워크로드 API 카테고리 (5) - 잡, 크론잡","description":null}},{"excerpt":"5.5 데몬셋 데몬셋(DaemonSet)은 레플리카셋의 특수한 형태라고 할 수 있는 리소스이다. 레플리카셋은 각 쿠버네티스 노드에 총 N…","fields":{"slug":"/kubernetes/kubernetes_5_4/"},"frontmatter":{"date":"August 28, 2022","title":"[쿠버네티스 완벽 가이드] 10. 워크로드 API 카테고리 (4) - 데몬셋, 스테이트풀셋","description":null}},{"excerpt":"리눅스 서버에서 작업하다보면 특정 문서를 수정할 일이 생기게 된다. 보통 문서 전체를 수정하기보다는 특정 설정 값을 하나씩 설정하게 되는데 파일이 하나라면 vi…","fields":{"slug":"/linux/sed/"},"frontmatter":{"date":"August 28, 2022","title":"[Linux] sed 명령어","description":null}},{"excerpt":"5.4 디플로이먼트 디플로이먼트(Deployment…","fields":{"slug":"/kubernetes/kubernetes_5_3/"},"frontmatter":{"date":"August 28, 2022","title":"[쿠버네티스 완벽 가이드] 09. 워크로드 API 카테고리 (3) - 디플로이먼트","description":null}},{"excerpt":"5.3 레플리카셋/레플리케이션 컨트롤러 레플리카셋(ReplicaSet) / 레플리케이션 컨트롤러(Replication Controller…","fields":{"slug":"/kubernetes/kubernetes_5_2/"},"frontmatter":{"date":"August 21, 2022","title":"[쿠버네티스 완벽 가이드] 08. 워크로드 API 카테고리 (2) - 레플리카셋/레플리케이션 컨트롤러","description":null}},{"excerpt":"5.1 워크로드 API 카테고리란? 다음으로는 쿠버네티스 리소스 중 한 가지인 워크로드 API 카테고리의 리소스들에 대해 살펴보겠다. 워크로드 API…","fields":{"slug":"/kubernetes/kubernetes_5_1/"},"frontmatter":{"date":"August 13, 2022","title":"[쿠버네티스 완벽 가이드] 07. 워크로드 API 카테고리 (1) - 파드(Pod)","description":null}},{"excerpt":"리눅스는 오픈소스 답게 엄청나게 많은 대분류와 종류들이 있다. 서버 작업할 때 리눅스의 정확한 버전을 알기 어려울 때가 있는데, 아래의 방법들 중 하나를 사용하면 된다.\n예시는 kubernetes nginx1.16 Offical…","fields":{"slug":"/linux/os/"},"frontmatter":{"date":"August 13, 2022","title":"[Linux] OS 확인 하는 법","description":null}},{"excerpt":"4.5.6 매니페스트 파일 설계 지금까지는 kubectl…","fields":{"slug":"/kubernetes/kubernetes_4_3/"},"frontmatter":{"date":"August 06, 2022","title":"[쿠버네티스 완벽 가이드] 06. API 리소스와 kubectl (3)","description":null}},{"excerpt":"…","fields":{"slug":"/kubernetes/kubernetes_terms/"},"frontmatter":{"date":"July 31, 2022","title":"쿠버네티스 용어 정리","description":null}},{"excerpt":"매니페스트? 쿠버네티스에서는 클러스터 안에서 움직이는 컨테이너 애플리케이션이나 네트워크 설정, 배치 실행을 하는 잡 등과 같은 리소스를 작성한다. 이와 같은 구체적인 설정 정보를 파일로 관리하는데, 이것이 매니페스트 파일(manifest file…","fields":{"slug":"/kubernetes/kubernetes_manifest/"},"frontmatter":{"date":"July 31, 2022","title":"쿠버네티스의 매니페스트 파일","description":null}},{"excerpt":"4.5 커맨드 라인 인터페이스(CLI) 도구 kubectl 쿠버네티스에서 클러스터 조작은 모두 쿠버네티스 마스터의 API를 통해 이루어진다. 직접 API를 호출해도 되지만, 커맨드 라인 인터페이스 도구 kubectl을 사용하여서도 조작이 가능하다.…","fields":{"slug":"/kubernetes/kubernetes_4_2/"},"frontmatter":{"date":"July 30, 2022","title":"[쿠버네티스 완벽 가이드] 05. API 리소스와 kubectl (2)","description":null}},{"excerpt":"1 비밀키(Private key), 공개키(Public Key) 생성 외부 인증기관에서 인증서를 전달받지 않고, 내부적으로 사용할 RSA 키 페어가 필요하다면 아래 설명된 절차를 통해서 간단하게 키 페어를 만들어 낼 수 있다. 1.1 RSA key…","fields":{"slug":"/cert/openssl/"},"frontmatter":{"date":"July 30, 2022","title":"[Cert] openssl을 사용한 인증서 파일 생성","description":null}},{"excerpt":"openssl을 사용하여 인증서 파일을 생성하기 전에 각 파일 확장자 명이 궁금하여 찾아보다가 잘 정리된 자료가 있어 정리하였다. https…","fields":{"slug":"/cert/certificate_file/"},"frontmatter":{"date":"July 30, 2022","title":"[Cert] 인증서 파일 확장자 설명","description":null}},{"excerpt":"…","fields":{"slug":"/cert/key/"},"frontmatter":{"date":"July 30, 2022","title":"[Cert] 개인키, 공개키 키 종류 비교","description":null}},{"excerpt":"본 장에서부터는 본격적으로 쿠버네티스 실습 내용을 기록하였다.\n실습은 GKE(Google Kubernetes Engine)과 kind를 사용하였다. 4.1 실습 준비 본격적으로 컨테이너를 생성하기 전에 gcloud와 kind…","fields":{"slug":"/kubernetes/kubernetes_4_1/"},"frontmatter":{"date":"July 25, 2022","title":"[쿠버네티스 완벽 가이드] 04. API 리소스와 kubectl (1)","description":null}},{"excerpt":"…","fields":{"slug":"/kubernetes/kubernetes_3/"},"frontmatter":{"date":"July 23, 2022","title":"[쿠버네티스 완벽 가이드] 03. 쿠버네티스 환경","description":null}},{"excerpt":"…","fields":{"slug":"/kubernetes/kubernetes_2/"},"frontmatter":{"date":"July 19, 2022","title":"[쿠버네티스 완벽 가이드] 02. 쿠버네티스 소개","description":null}},{"excerpt":"쿠버네티스 관련 자격증인 CKA/CKAD에 대해 찾아보다가 이 책이 초보자부터 보기 좋다는 이야기를 들어서 구입하여 보게 되었다. 본 페이지에서는 이 책을 읽으며 새로 알게된 내용들을 정리하고자 작성하게 되었다. 1. 도커(Docker…","fields":{"slug":"/kubernetes/kubernetes_1/"},"frontmatter":{"date":"July 18, 2022","title":"[쿠버네티스 완벽 가이드] 01. 도커","description":null}},{"excerpt":"앞서 Go 기본 문법책을 살펴보면서 공부했던 동시성 개발에 대해 더 자세히 알고 싶어 동시성에 대해서만 다루고 있는 책을 살펴보았다.\n이라는 책인데, 동시성 개발의 역사부터 시작해서 Go…","fields":{"slug":"/Golang/concurrency_in_go_1/"},"frontmatter":{"date":"July 02, 2022","title":"[Go 동시성 프로그래밍] 01. 동시성 소개, 코드 모델링: 순차적인 프로세스 간의 통신","description":null}},{"excerpt":"앞서 Go 기본 문법책을 살펴보면서 공부했던 동시성 개발에 대해 더 자세히 알고 싶어 동시성에 대해서만 다루고 있는 책을 살펴보았다.\n이라는 책인데, 동시성 개발의 역사부터 시작해서 Go…","fields":{"slug":"/golang/concurrency_in_go_1/"},"frontmatter":{"date":"July 02, 2022","title":"[Go 동시성 프로그래밍] 01. 동시성 소개, 코드 모델링: 순차적인 프로세스 간의 통신","description":null}},{"excerpt":"[Level 2] 기능 개발 기능 개발은 순차적으로 배포 가능한 기능들의 완료 시점을 계산하여 특정 일에 몇 개의 기능을 배포할 수 있는지 계산하는 문제였다. 문제 자체는 매우 쉬우나, 테스트 케이스 1…","fields":{"slug":"/algorithm/programmers_stack,queue/"},"frontmatter":{"date":"July 02, 2022","title":"[프로그래머스 연습문제] 스택, 큐","description":null}},{"excerpt":"이번에는 다이나믹 프로그래밍 문제들을 풀어보았다.\nDP 알고리즘은 개념 자체가 생소하고 문제에 적용하기 어려워 그런지 LV3 이상 문제부터 있었다. [Level 3] N으로 표현 레벨 3인데 난이도가 생각보다 어려웠다... DP…","fields":{"slug":"/algorithm/programmers_dynamic/"},"frontmatter":{"date":"June 11, 2022","title":"[프로그래머스 연습문제] Dynamic Programming","description":null}},{"excerpt":"1. 운영체제에 종족적인 코드 처리 운영체제에 따라 코드가 다를 경우 다음과 같은 방식으로 처리할 수 있다. ₩runtime.GOOS`로 운영체제를 확인한 후 분기 처리. 해당 상수는 runtime…","fields":{"slug":"/Golang/package/"},"frontmatter":{"date":"June 11, 2022","title":"[Go 언어 문법 정리] 06. 패키지","description":null}},{"excerpt":"1. 운영체제에 종족적인 코드 처리 운영체제에 따라 코드가 다를 경우 다음과 같은 방식으로 처리할 수 있다. ₩runtime.GOOS`로 운영체제를 확인한 후 분기 처리. 해당 상수는 runtime…","fields":{"slug":"/golang/package/"},"frontmatter":{"date":"June 11, 2022","title":"[Go 언어 문법 정리] 06. 패키지","description":null}},{"excerpt":"1. 런타임 에러와 패닉 실행 중에 에러가 발생하면 Go 런타임은 패닉을 발생시킨다. 패닉이 발생하면 패닉 에러 메시지가 출력되고 프로그램이 종료된다.\n에러 상황이 심각해서 프로그램을 더 이상 실행할 수 없을 때는 panic…","fields":{"slug":"/Golang/error/"},"frontmatter":{"date":"May 29, 2022","title":"[Go 언어 문법 정리] 05. 에러 처리","description":null}},{"excerpt":"1. 런타임 에러와 패닉 실행 중에 에러가 발생하면 Go 런타임은 패닉을 발생시킨다. 패닉이 발생하면 패닉 에러 메시지가 출력되고 프로그램이 종료된다.\n에러 상황이 심각해서 프로그램을 더 이상 실행할 수 없을 때는 panic…","fields":{"slug":"/golang/error/"},"frontmatter":{"date":"May 29, 2022","title":"[Go 언어 문법 정리] 05. 에러 처리","description":null}},{"excerpt":"…","fields":{"slug":"/Golang/concurrency_3/"},"frontmatter":{"date":"April 16, 2022","title":"[Go 언어 문법 정리] 04. 병행 처리 (3) 병행 처리 활용","description":null}},{"excerpt":"…","fields":{"slug":"/golang/concurrency_3/"},"frontmatter":{"date":"April 16, 2022","title":"[Go 언어 문법 정리] 04. 병행 처리 (3) 병행 처리 활용","description":null}},{"excerpt":"1. 저수준 제어 Go에는 고루틴과 채널 외에도 병행 프로그래밍을 위한 저수준 제어 기능이 있다. 패키지 내용 sync mutex로 공유 메모리 제어 sync/atomic 원자성을 보장 (add, compare, swap) 1.1 sync.Mutex…","fields":{"slug":"/Golang/concurrency_2/"},"frontmatter":{"date":"April 16, 2022","title":"[Go 언어 문법 정리] 04. 병행 처리 (2) 저수준 제어","description":null}},{"excerpt":"1. 저수준 제어 Go에는 고루틴과 채널 외에도 병행 프로그래밍을 위한 저수준 제어 기능이 있다. 패키지 내용 sync mutex로 공유 메모리 제어 sync/atomic 원자성을 보장 (add, compare, swap) 1.1 sync.Mutex…","fields":{"slug":"/golang/concurrency_2/"},"frontmatter":{"date":"April 16, 2022","title":"[Go 언어 문법 정리] 04. 병행 처리 (2) 저수준 제어","description":null}},{"excerpt":"1. 고루틴(goroutine) 이번에는 Go언어에서 지원하는 몇 가지 병행 처리 기법에 대해서 볼 예정이다.\nGo언어의 가장 큰 특징 중 하나인 goroutine이 바로 그러한 기능인데,\n은 Go…","fields":{"slug":"/Golang/concurrency_1/"},"frontmatter":{"date":"April 02, 2022","title":"[Go 언어 문법 정리] 04. 병행 처리 (1) 고루틴과 채널","description":null}},{"excerpt":"1. 고루틴(goroutine) 이번에는 Go언어에서 지원하는 몇 가지 병행 처리 기법에 대해서 볼 예정이다.\nGo언어의 가장 큰 특징 중 하나인 goroutine이 바로 그러한 기능인데,\n은 Go…","fields":{"slug":"/golang/concurrency_1/"},"frontmatter":{"date":"April 02, 2022","title":"[Go 언어 문법 정리] 04. 병행 처리 (1) 고루틴과 채널","description":null}},{"excerpt":"Go 언어 웹 프로그래밍 철저 입문 책으로 공부하면서 개인적으로 알아두면 좋은 문법 몇 가지를 정리해보려 한다.\n매우 기초적인 문법까지는 너무 양이 많을 것 같아 제외하였고, 내 기준 신기한 문법만 정리해보았다. 1. 레이블 레이블이란 c…","fields":{"slug":"/Golang/basic_grammer/"},"frontmatter":{"date":"March 01, 2022","title":"[Go 언어 문법 정리] 01. 기초 문법","description":null}},{"excerpt":"Go 언어 웹 프로그래밍 철저 입문 책으로 공부하면서 개인적으로 알아두면 좋은 문법 몇 가지를 정리해보려 한다.\n매우 기초적인 문법까지는 너무 양이 많을 것 같아 제외하였고, 내 기준 신기한 문법만 정리해보았다. 1. 레이블 레이블이란 c…","fields":{"slug":"/golang/basic_grammer/"},"frontmatter":{"date":"March 01, 2022","title":"[Go 언어 문법 정리] 01. 기초 문법","description":null}},{"excerpt":"오랜만에 DFS, BFS 문제들을 풀어보았다.\n주로 DFS 기법을 자주 사용하여 풀었다. [Level 2] 타겟 넘버 DFS, BFS 문제 중 간단한 편에 속하는 문제이다. Queue를 사용하였고, 노드별 가지가…","fields":{"slug":"/algorithm/programmers_dfs,bfs/"},"frontmatter":{"date":"March 01, 2022","title":"[프로그래머스 연습문제] BFS, DFS","description":null}},{"excerpt":"JWT Token과 PASETO에 대한 비교 웹 개발 공부를 하던 중 JWT Token에 대응되는 PASETO 대해 알게 되어 관련 내용을 정리해보고자 한다. 1. JWT Token 이란? JWT Token…","fields":{"slug":"/web/jwt&paesto/"},"frontmatter":{"date":"October 25, 2021","title":"[Web] JWT Token과 PASETO","description":null}},{"excerpt":"크롬 브라우저의 쿠키 정책과 SameSite 작년 중 고객 정보 관련 업무를 처리하다 크롬 브라우저의 정책 변경으로 인해 곤혹을 치른적이 있다.\n결론부터 말하자면 SameSite의 Default…","fields":{"slug":"/web/samesite/"},"frontmatter":{"date":"October 04, 2021","title":"[Web] 크롬 브라우저의 쿠키 정책과 SameSite","description":null}},{"excerpt":"코테 연습할겸해서 풀었던 해시 문제들에 대한 풀이를 올려보았다. [Level 1] 완주하지 못한 선수 매우 간단한 문제로, 참가자와 완료한 선수들 명단이 있는데, 이중 완료하지 못한 선수 이름을 리턴하기만 하면 된다. 해시 맵에 묶여있어서 map…","fields":{"slug":"/algorithm/programmers_hash/"},"frontmatter":{"date":"October 04, 2021","title":"[프로그래머스 연습문제] 해시","description":null}},{"excerpt":"이번에는 생성한 gatsby 프로젝트를 Netlify를 사용해 배포하는 법에 대해 적어보겠다. 설치 과정이 좀 고됬지만 배포는 그보다는 훨씬 간단하다. Netlify라는 정적 웹사이트 배포 도구가 있어 별도 도메인을 빌려야할 필요도 없고, github…","fields":{"slug":"/gatsby/gatsby_deploy/"},"frontmatter":{"date":"September 25, 2021","title":"[Gatsby Blog 만들기 - 2] Gastby Blog 배포 (gatsby-starter-bee)","description":null}},{"excerpt":"오랫만에 다시 Gatsby 블로그를 개설했다. 너무 간만인지 개삽질을 거듭해서 아래와 같이 정리하게 되었다. Windows WSL2 기반으로 작성했으며, WSL2 설치는 아래 Blog를 참조하였다. 설치 방법 😎 1. nvm…","fields":{"slug":"/gatsby/gatsby_start/"},"frontmatter":{"date":"September 25, 2021","title":"[Gatsby Blog 만들기 - 1] Gastby Blog 설치 (gatsby-starter-bee)","description":null}}]}},"pageContext":{}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}