{"componentChunkName":"component---src-templates-blog-post-js","path":"/kubernetes/kubernetes_5_2/","result":{"data":{"site":{"siteMetadata":{"title":"Devlog"}},"markdownRemark":{"id":"863c8140-4bbd-5d28-b250-91c73e7aacea","excerpt":"5.3 레플리카셋/레플리케이션 컨트롤러 레플리카셋(ReplicaSet) / 레플리케이션 컨트롤러(Replication Controller…","html":"<h1>5.3 레플리카셋/레플리케이션 컨트롤러</h1>\n<p>레플리카셋(ReplicaSet) / 레플리케이션 컨트롤러(Replication Controller)는 파드의 레플리카를 생성하고 지정한 파드 수를 유지하는 리소스이다. 원래 파드의 레플리카를 생성하는 리소스의 이름은 레플리케이션 컨트롤러였는데, 시간이 지나 레플리카셋으로 이름이 변경되면서 일부 기능이 추가되었다.</p>\n<h2>5.3.1 레플리카셋 생성</h2>\n<p>레플리카셋은 아래와 같은 매니페스트를 사용한다. <code class=\"language-text\">spec.template</code> 부분에는 복제할 파드 정의(Pod Template)를 기술한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ReplicaSet\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> sample<span class=\"token punctuation\">-</span>rs\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> sample<span class=\"token punctuation\">-</span>app\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> sample<span class=\"token punctuation\">-</span>app\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>container\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span><span class=\"token number\">1.16</span>\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ kubectl apply <span class=\"token parameter variable\">-f</span> sample-rs.yaml\nreplicaset.apps/sample-rs created\n\n<span class=\"token comment\"># 레플리카셋 조회</span>\n$ kubectl get replicasets <span class=\"token parameter variable\">-o</span> wide\nNAME        DESIRED   CURRENT   READY   AGE   CONTAINERS        IMAGES       SELECTOR\nsample-rs   <span class=\"token number\">3</span>         <span class=\"token number\">3</span>         <span class=\"token number\">3</span>       39s   nginx-container   nginx:1.16   <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>sample-app\n\n<span class=\"token comment\"># 지정한 레이블로 파드를 조회</span>\n$ kubectl get pods <span class=\"token parameter variable\">-l</span> <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>sample-app <span class=\"token parameter variable\">-o</span> wide\nNAME              READY   STATUS    RESTARTS   AGE   IP           NODE                   NOMINATED NODE   READINESS GATES\nsample-rs-h2nwl   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          77s   <span class=\"token number\">10.244</span>.2.5   kind-cluster-worker3   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nsample-rs-stvwv   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          77s   <span class=\"token number\">10.244</span>.1.4   kind-cluster-worker2   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nsample-rs-zmdss   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          77s   <span class=\"token number\">10.244</span>.3.6   kind-cluster-worker    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<h2>5.3.2 파드 정지와 자동화된 복구</h2>\n<p>레플리카셋에서는 노드나 파드에 장애가 발생했을 때 지정한 파드 수를 유지하기 위해 다른 노드에서 파드를 기동시켜 주기 때문에 장애 시 많은 영향을 받지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># 파드 정지 (삭제)</span>\n<span class=\"token comment\"># 실제 기동 중인 파드명을 지정</span>\n$ kubectl delete pod sample-rs-zmdss\npod <span class=\"token string\">\"sample-rs-zmdss\"</span> deleted\n\n<span class=\"token comment\"># 레플리카셋 목록 표시</span>\n$ kubectl get pods\nNAME                READY   STATUS    RESTARTS        AGE\nsample-rs-29nlp     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>               29s\nsample-rs-h2nwl     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>2m43s ago<span class=\"token punctuation\">)</span>   7d22h\nsample-rs-stvwv     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>2m43s ago<span class=\"token punctuation\">)</span>   7d22h\n\n<span class=\"token comment\"># 레플리카셋 상세 정보 표시</span>\n$ kubectl describe replicaset sample-rs\n<span class=\"token punctuation\">..</span>.\nEvents:\n  Type    Reason            Age    From                   Message\n  ----    ------            ----   ----                   -------\n  Normal  SuccessfulCreate  7d22h  replicaset-controller  Created pod: sample-rs-zmdss\n  Normal  SuccessfulCreate  7d22h  replicaset-controller  Created pod: sample-rs-stvwv\n  Normal  SuccessfulCreate  7d22h  replicaset-controller  Created pod: sample-rs-h2nwl\n  Normal  SuccessfulCreate  2m33s  replicaset-controller  Created pod: sample-rs-29nlp</code></pre></div>\n<h2>5.3.3 레플리카 셋과 레이블</h2>\n<p>레플리카셋은 쿠버네티스가 파드를 모니터링하여 파드 수를 조정한다. 모니터링은 특정 레이블을 가진 파드 수를 계산하는 형태로 이루어진다. 레플리카 수가 부족한 경우 매니페스트에 기술된 <code class=\"language-text\">spec.template</code>로 파드를 생성하고 레플리카 수가 많을 경우 레이블이 일치하는 파드 중 하나를 삭제한다. 어떤 레이블을 가진 파드를 계산할지는 다음과 같이 <code class=\"language-text\">spec.selector</code> 부분에 저장한다. <code class=\"language-text\">spec.selector</code>와 <code class=\"language-text\">spec.template.metadata.labels</code>의 레이블이 일치해야 정상적으로 레플리카 셋이 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">matchLabel</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> sample<span class=\"token punctuation\">-</span>app</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># 레이블 sample-app의 레플리카 수가 3인 레플리카 셋을 생성</span>\n$ kubectl apply <span class=\"token parameter variable\">-f</span> sample-rs.yaml\n\n<span class=\"token comment\"># 레이블 sample-app을 가진 파드 생성</span>\n$ kubectl apply <span class=\"token parameter variable\">-f</span> sample-rs-pod.yaml\n\n<span class=\"token comment\"># 상태 확인</span>\n$ kubectl get pods <span class=\"token parameter variable\">-L</span> app\nNAME              READY   STATUS        RESTARTS      AGE\nsample-pod        <span class=\"token number\">1</span>/1     Running       <span class=\"token number\">7</span> <span class=\"token punctuation\">(</span>35m ago<span class=\"token punctuation\">)</span>   21d\nsample-rs-29nlp   <span class=\"token number\">1</span>/1     Running       <span class=\"token number\">0</span>             33m\nsample-rs-h2nwl   <span class=\"token number\">1</span>/1     Running       <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>35m ago<span class=\"token punctuation\">)</span>   7d22h\nsample-rs-pod     <span class=\"token number\">0</span>/1     Terminating   <span class=\"token number\">0</span>             3s\nsample-rs-stvwv   <span class=\"token number\">1</span>/1     Running       <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>35m ago<span class=\"token punctuation\">)</span>   7d22h</code></pre></div>\n<h2>5.3.4 레플리카셋과 스케일링</h2>\n<p>레플리카 셋 설정을 변경하여 파드 수를 변경할 수 있다.</p>\n<ul>\n<li>매니페스트를 수정하여 <code class=\"language-text\">kubectl apply -f</code> 명령어 사용</li>\n<li><code class=\"language-text\">kubectl scale</code> 명령어 사용</li>\n</ul>\n<h3>수정한 매니페스트로 kubectl apply 명령어를 실행하는 경우</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># 레플리카 수를 3에서 4로 변경한 매니페스트를 apply</span>\n$ <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s|replicas: 3|replicas: 4|'</span> sample-rs.yaml\n$ kubectl apply <span class=\"token parameter variable\">-f</span> sample-rs.yaml\nreplicaset.apps/sample-rs configured\n\n$ kubectl get pods\nNAME              READY   STATUS    RESTARTS      AGE\nsample-pod        <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">7</span> <span class=\"token punctuation\">(</span>42m ago<span class=\"token punctuation\">)</span>   21d\nsample-rs-29nlp   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>             40m\nsample-rs-h2nwl   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>42m ago<span class=\"token punctuation\">)</span>   7d22h\nsample-rs-pc5xx   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>             52s\nsample-rs-stvwv   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>42m ago<span class=\"token punctuation\">)</span>   7d22h</code></pre></div>\n<h3>kubectl scale 명령어를 사용하는 경우</h3>\n<p>두 번재 방법은 <code class=\"language-text\">kubectl scale</code> 명령어를 사용하여 스케일링 하는 방법이다. <code class=\"language-text\">scale</code> 명령어를 사용한 스케일 처리는 레플리카셋 이외에도 레플리케이션 컨트롤러/디플로이먼트/스테이트풀셋/잡/크론잡에서 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># 레플리카 수를 5로 변경</span>\n$ kubectl scale replicaset sample-rs <span class=\"token parameter variable\">--replicas</span> <span class=\"token number\">5</span>\nreplicaset.apps/sample-rs scaled\n\n$ get pods <span class=\"token parameter variable\">-l</span> app\nNAME              READY   STATUS    RESTARTS      AGE\nsample-rs-29nlp   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>             46m\nsample-rs-h2nwl   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>48m ago<span class=\"token punctuation\">)</span>   7d23h\nsample-rs-pc5xx   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>             7m9s\nsample-rs-rld68   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>             22s\nsample-rs-stvwv   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>48m ago<span class=\"token punctuation\">)</span>   7d23h</code></pre></div>\n<h2>5.3.5 일치성 기준 조건과 집합성 기준 조건</h2>\n<p>서비스 중단 예정인 레플리케이션 컨트롤러의 셀렉터는 일치성 기준 셀렉터였지만, 레플리카셋에서는 집합성 기준 셀렉터를 사용하여 더 유연하게 제어가 가능하다.</p>\n<table>\n<thead>\n<tr>\n<th>조건</th>\n<th>개요</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>일치성 기준</td>\n<td>조건부에 일치 불일치(=, !=) 조건 지정</td>\n</tr>\n<tr>\n<td>집합성 기준</td>\n<td>조건부에 일치 불일치(=, !=) 조건 지정과 집합(in, notin, exists) 조건 지정 가능</td>\n</tr>\n</tbody>\n</table>\n<p>일치성 기준 조건에서는 앞서 사용한 label 예시처럼, <code class=\"language-text\">app=sample-app</code>과 같이 지정한다. 집합성 기준 조건에서는 일치성 기준 조건과 함께 집합 조건을 지정할 수 있다. <code class=\"language-text\">env In [deployment,staging]</code>과 같이 지정할 수 있다.</p>","frontmatter":{"title":"[쿠버네티스 완벽 가이드] 08. 워크로드 API 카테고리 (2) - 레플리카셋/레플리케이션 컨트롤러","date":"August 21, 2022","description":null}},"previous":{"fields":{"slug":"/web/jwt&paesto/"},"frontmatter":{"title":"[Web] JWT Token과 PASETO"}},"next":{"fields":{"slug":"/web/jwt&paesto/"},"frontmatter":{"title":"[Web] JWT Token과 PASETO"}}},"pageContext":{"id":"863c8140-4bbd-5d28-b250-91c73e7aacea"}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}