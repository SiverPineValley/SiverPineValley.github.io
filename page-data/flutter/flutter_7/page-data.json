{"componentChunkName":"component---src-templates-blog-post-js","path":"/flutter/flutter_7/","result":{"data":{"site":{"siteMetadata":{"title":"Devlog"}},"markdownRemark":{"id":"00caded2-ae07-555f-a208-f27d25763e6e","excerpt":"1. ChangeNotifier를 이용한 action의 처리 이번에는 ChangeNotifier를 이용한 action의 처리 방법에 대해 알아보겠다. action의 종류에는 앞서 설명했던  뿐만 아니라, (팝업 표시),  등이 있다. action…","html":"<h1>1. ChangeNotifier를 이용한 action의 처리</h1>\n<p>이번에는 ChangeNotifier를 이용한 action의 처리 방법에 대해 알아보겠다. action의 종류에는 앞서 설명했던 <code class=\"language-text\">Navigator.push</code> 뿐만 아니라, <code class=\"language-text\">showDialog</code>(팝업 표시), <code class=\"language-text\">showBottomSheet</code> 등이 있다. action을 처리하는 프로세스 패턴은 다음과 같다.</p>\n<ol>\n<li>action을 수행하는 void 함수 생성</li>\n<li><code class=\"language-text\">initState</code> 메소드 내 ChangeNotifier의 addListener 함수를 사용하여 리스너 등록</li>\n<li><code class=\"language-text\">dispose</code> 메소드 내 ChangeNotifier의 removeListener 함수를 사용하여 리스너 제거</li>\n</ol>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">late <span class=\"token keyword\">final</span> <span class=\"token class-name\">AppProvider</span> appProv<span class=\"token punctuation\">;</span>\n\n<span class=\"token metadata function\">@override</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  appProv <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>read<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AppProvider</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  appProv<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>appListener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">appListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>appProv<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> <span class=\"token class-name\">AppState</span><span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">WidgetsBinding</span><span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span><span class=\"token function\">addPostFrameCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">Navigator</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n        context<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">MaterialPageRoute</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token class-name\">SuccessPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>appProv<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> <span class=\"token class-name\">AppState</span><span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">WidgetsBinding</span><span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span><span class=\"token function\">addPostFrameCallback</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">showDialog</span><span class=\"token punctuation\">(</span>\n          context<span class=\"token punctuation\">:</span> context<span class=\"token punctuation\">,</span>\n          builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">AlertDialog</span><span class=\"token punctuation\">(</span>\n              content<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'Something went wrong'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>2. 출처</h1>\n<p><a href=\"https://www.udemy.com/course/flutter-provider-essential-korean/\">https://www.udemy.com/course/flutter-provider-essential-korean/</a></br></p>","frontmatter":{"title":"[Flutter] 07. ChangeNotifier를 이용한 action 처리","date":"January 21, 2024","description":null}},"previous":{"fields":{"slug":"/web/jwt&paesto/"},"frontmatter":{"title":"[Web] JWT Token과 PASETO"}},"next":{"fields":{"slug":"/web/jwt&paesto/"},"frontmatter":{"title":"[Web] JWT Token과 PASETO"}}},"pageContext":{"id":"00caded2-ae07-555f-a208-f27d25763e6e"}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}