{"componentChunkName":"component---src-templates-blog-post-js","path":"/cert/openssl/","result":{"data":{"site":{"siteMetadata":{"title":"Devlog"}},"markdownRemark":{"id":"de8866dd-1307-525c-b1f1-b326f9e6453b","excerpt":"1 비밀키(Private key), 공개키(Public Key) 생성 외부 인증기관에서 인증서를 전달받지 않고, 내부적으로 사용할 RSA 키 페어가 필요하다면 아래 설명된 절차를 통해서 간단하게 키 페어를 만들어 낼 수 있다. 1.1 RSA key pair 생성 private.pem…","html":"<h1>1 비밀키(Private key), 공개키(Public Key) 생성</h1>\n<p>외부 인증기관에서 인증서를 전달받지 않고, 내부적으로 사용할 RSA 키 페어가 필요하다면 아래 설명된 절차를 통해서 간단하게 키 페어를 만들어 낼 수 있다.</p>\n<h2>1.1 RSA key pair 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">openssl genrsa <span class=\"token parameter variable\">-des3</span> <span class=\"token parameter variable\">-out</span> private.pem <span class=\"token number\">2048</span></code></pre></div>\n<p>private.pem파일을 열어보면 -----BEGIN RSA PRIVATE KEY----- 로 표시되는 것을 확인 할 수 있다.</p>\n<h2>1.2 Private key에 포함된 정보 확인</h2>\n<p>RSA private key로부터 public key를 만들어 낼 수 있다. 어떻게 그게 가능한지 보기 위해서 아래 명령어를 사용해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">openssl rsa <span class=\"token parameter variable\">-text</span> <span class=\"token parameter variable\">-in</span> private.pem</code></pre></div>\n<p>위 명령어로 출력된 결과에 public key를 정의하는데 필요한 modulus와 publicExponent정보가 포함되어있는것을 알 수있다. 실제로 private key로부터 public key를 추출하기 위해서 다음 단계를 살펴보자.</p>\n<h2>1.3 Private key에서 Public key추출하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">openssl rsa <span class=\"token parameter variable\">-in</span> private.pem <span class=\"token parameter variable\">-outform</span> PEM <span class=\"token parameter variable\">-pubout</span> <span class=\"token parameter variable\">-out</span> public.pem</code></pre></div>\n<p>public.pem 파일을 열어서 -----BEGIN PUBLIC KEY----- 로 표시되는것을 확인 하면 된다.</p>\n<h1>2 비밀키를 사용한 인증서 파일 생성</h1>\n<p>다음으로는, 인증서(crt) 파일을 생성해보겠다.</p>\n<h2>2.1 비밀 키 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">openssl genrsa <span class=\"token parameter variable\">-out</span> private.key <span class=\"token number\">2048</span></code></pre></div>\n<h2>2.2 CRT 파일을 만들기 위해 필요한 정보를 암호화한 인증서 생성 요청 파일 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">openssl req <span class=\"token parameter variable\">-new</span> <span class=\"token parameter variable\">-key</span> <span class=\"token string\">\"KEY 경로\"</span> <span class=\"token parameter variable\">-out</span> <span class=\"token string\">\"CSR 저장 경로\"</span> <span class=\"token parameter variable\">-config</span> <span class=\"token string\">\"REQ_INFO 경로\"</span></code></pre></div>\n<ul>\n<li>Key 경로: Private Key가 저장된 경로</li>\n<li>CSR 저장 경로: CSR 파일이 저장될 경로</li>\n<li>REQ_INFO 경로: 인증서 생성 요청 파일 경로</li>\n</ul>\n<p>위 명령어를 실행하기 전에 REQ_INFO 파일을 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[req] \ndefault_bit = 2048 \nprompt = no \ndistinguished_name = dn \n\n[dn] \nC=KR \nL=Seoul \nO=COMPANY \nOU=DEV \nemailAddress=EMailAddress ex)test@test.com\nCN=IP 또는 Domain</code></pre></div>\n<h2>2.3 인증서 파일(crt) 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">openssl req <span class=\"token parameter variable\">-x509</span> <span class=\"token parameter variable\">-days</span> <span class=\"token string\">\"인증서유효기간(일)\"</span> <span class=\"token parameter variable\">-key</span> <span class=\"token string\">\"KEY 경로\"</span> <span class=\"token parameter variable\">-in</span> <span class=\"token string\">\"CSR 경로\"</span> <span class=\"token parameter variable\">-out</span> <span class=\"token string\">\"CRT 저장 경로\"</span> <span class=\"token parameter variable\">-days</span> <span class=\"token string\">\"인증서유효기간(일)\"</span> <span class=\"token parameter variable\">-config</span> <span class=\"token string\">\"REQ_INFO 경로\"</span></code></pre></div>\n<ul>\n<li>인증서 유효기간 : 일단위로 입력</li>\n<li>KEY 경로 : PrivateKey가 저장된 경로</li>\n<li>CSR 경로 : CSR 파일이 저장된 경로</li>\n<li>CRT 저장 경로 : CRT 파일을 저장 할 경로</li>\n<li>REQ_INFO 경로 : 인증서 생성 요청 정보 파일 경로</li>\n</ul>\n<h1>출처</h1>\n<p><a href=\"https://jjig810906.tistory.com/78\">https://jjig810906.tistory.com/78</a> [프로그램마귀:티스토리]</br>\n<a href=\"https://www.letmecompile.com/certificate-file-format-extensions-comparison/\">https://www.letmecompile.com/certificate-file-format-extensions-comparison/</a></p>","frontmatter":{"title":"[Cert] openssl을 사용한 인증서 파일 생성","date":"July 30, 2022","description":null}},"previous":{"fields":{"slug":"/web/jwt&paesto/"},"frontmatter":{"title":"[Web] JWT Token과 PASETO"}},"next":{"fields":{"slug":"/web/jwt&paesto/"},"frontmatter":{"title":"[Web] JWT Token과 PASETO"}}},"pageContext":{"id":"de8866dd-1307-525c-b1f1-b326f9e6453b"}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}