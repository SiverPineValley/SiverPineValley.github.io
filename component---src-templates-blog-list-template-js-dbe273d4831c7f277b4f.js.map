{"version":3,"file":"component---src-templates-blog-list-template-js-dbe273d4831c7f277b4f.js","mappings":"uJAmCA,IAhCe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEA,sBAAIG,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKP,IAKhB,gBAAC,EAAAM,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCP,GAML,uBAAKK,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,4BAAOH,GACP,8BAAQ,MACH,IAAIO,MAAOC,cAAc,eAC5B,IACA,qBAAGC,KAAK,4BAA2B,WAEjC,C,gHC7B+B,IAEpBC,EAAQ,8DA8B1B,OA9B0B,wBAC3BC,OAAA,WACE,MAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC1CnB,EAAWe,KAAKC,MAAMhB,SACtBoB,EAAcL,KAAKC,MAAMK,YAAYD,YACrCE,EAAWP,KAAKC,MAAMK,YAAYC,SAYxC,OACE,gBAAC,IAAM,CAACtB,SAAUA,GACfc,EAAMS,KAAI,IAAe,IAAd,KAAEC,GAAM,EAClB,MAAMvB,EAAQuB,EAAKC,YAAYxB,OAASuB,EAAKE,OAAOC,KACpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,gBAAC,EAAApB,KAAI,CAACC,GAAIgB,EAAKE,OAAOC,MAAO1B,GAC1B,IAGT,2BArBwB,MAC1B,IAAI4B,EAAaT,GAAe,EAAI,EAAIA,EAAc,EAClDU,EAAWV,GAAe,EAAI,EAAIA,EAAc,EACpDU,EAAUA,EAAUR,EAAWA,EAAWQ,EAC1C,MAAMC,EAAS,GACf,KAAOF,GAAcC,EAASD,IAC5BE,EAAOC,KAAK,uBAAKJ,IAAKC,GAAY,gBAAC,EAAAtB,KAAI,CAACC,GAAmB,IAAfqB,EAAgB,iBAAsBA,GAAeA,KAEnG,OAAOE,CAAM,EAaLE,IAGZ,EAAC,EA9B0B,CAASC,EAAAA,U","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/blog-list-template.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges;\n    const location = this.props.location;\n    const currentPage = this.props.pageContext.currentPage;\n    const numPages = this.props.pageContext.numPages;\n    const renderingPagenation = () => {\n      let renderPage = currentPage <= 3 ? 1 : currentPage - 2;\n      let endPage = (currentPage <= 3 ? 5 : currentPage + 2);\n      endPage = endPage > numPages ? numPages : endPage;\n      const result = [];\n      for (; renderPage <= endPage; renderPage++) {\n        result.push(<div key={renderPage}><Link to={renderPage === 1 ? `/blog` : `/blog/${renderPage}`}>{renderPage}</Link></div>);\n      }\n      return result;\n    };\n\n    return (\n      <Layout location={location}>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <li key={node.fields.slug}>\n              <Link to={node.fields.slug}>{title}</Link>\n            </li>\n          )\n        })}\n        <div>{renderingPagenation()}</div>\n      </Layout>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC }}\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`"],"names":["location","title","children","isRootPath","pathname","header","className","Link","to","Date","getFullYear","href","BlogList","render","posts","this","props","data","allMarkdownRemark","edges","currentPage","pageContext","numPages","map","node","frontmatter","fields","slug","key","renderPage","endPage","result","push","renderingPagenation","React"],"sourceRoot":""}